import React, { useState } from 'react';
import { 
  MenuDotsIcon, 
  SecurityLockIcon, 
  EditIcon,
  BanIcon,
  LockKeyIcon,
  KeyboardIcon,
  ToolIcon,
  SettingsIcon,
  AnnouncementIcon,
  HomeIcon,
  CalendarIcon,
  SearchHashtagIcon,
  ChecklistIcon,
  FlagIcon,
  FlagChatIcon,
  OnlineStatusIcon,
  AwayStatusIcon,
  BusyStatusIcon,
  OfflineStatusIcon,
  FavoritesIcon,
  NotificationIcon,
  CallIcon,
  AttachmentIcon,
  RoleBadgeIcon,
  LockTierIcon,
  PhoneIcon,
  MailIcon,
  AnonymousIcon,
  WebhookIcon,
  TimeoutIcon,
  ExternalLinkIcon,
  BlockMessageIcon,
  StarOutlineIcon,
  SparklesIcon,
  NotificationOffIcon,
  OutgoingCallIcon,
  VideoCallIcon,
  PinIcon,
  AddFriendIcon,
  GroupUsersIcon,
  DocumentIcon,
  ThumbsUpIcon,
  ThumbsDownIcon,
  SearchMagnifyIcon,
  CloseIcon,
  WalletIcon,
  HelpIcon,
  BugIcon,
  ToolsIcon,
  AddIcon,
  ImageAddIcon,
  TranslateIcon,
  UploadIcon,
  DownloadIcon,
  EffectsIcon,
  MenuIcon,
  ListIcon,
  UserPlayIcon,
  MicrophoneIcon,
  GiftIcon
} from '../components/icons/Icons';

interface IconData {
  name: string;
  component: React.FC<{ size?: number; className?: string }>;
  description: string;
}

const IconsDemo: React.FC = () => {
  const [copiedIcon, setCopiedIcon] = useState<string | null>(null);

  const copyToClipboard = (iconName: string) => {
    navigator.clipboard.writeText(`<${iconName} />`);
    setCopiedIcon(iconName);
    setTimeout(() => setCopiedIcon(null), 2000);
  };

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∫–æ–Ω–æ–∫
  const profiles: IconData[] = [
    { name: 'MenuDotsIcon', component: MenuDotsIcon, description: '–ú–µ–Ω—é —Å —Ç—Ä–µ–º—è —Ç–æ—á–∫–∞–º–∏' },
    { name: 'SecurityLockIcon', component: SecurityLockIcon, description: '–ó–∞–º–æ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–∑–µ–ª–µ–Ω—ã–π)' },
    { name: 'EditIcon', component: EditIcon, description: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ/–ö–∞—Ä–∞–Ω–¥–∞—à' },
    { name: 'BanIcon', component: BanIcon, description: '–ó–∞–ø—Ä–µ—Ç/–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞' },
    { name: 'LockKeyIcon', component: LockKeyIcon, description: '–ó–∞–º–æ–∫' },
    { name: 'KeyboardIcon', component: KeyboardIcon, description: '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞' },
    { name: 'ToolIcon', component: ToolIcon, description: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç/–ö–ª—é—á' },
    { name: 'SettingsIcon', component: SettingsIcon, description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏/–®–µ—Å—Ç–µ—Ä–µ–Ω–∫–∞' }
  ];

  const serverChannelTabIcons: IconData[] = [
    { name: 'AnnouncementIcon', component: AnnouncementIcon, description: '–û–±—ä—è–≤–ª–µ–Ω–∏—è/–ê–Ω–æ–Ω—Å—ã' },
    { name: 'HomeIcon', component: HomeIcon, description: '–ì–ª–∞–≤–Ω–∞—è/–î–æ–º' },
    { name: 'CalendarIcon', component: CalendarIcon, description: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å' },
    { name: 'SearchHashtagIcon', component: SearchHashtagIcon, description: '–ü–æ–∏—Å–∫ —Å —Ö—ç—à—Ç–µ–≥–æ–º' },
    { name: 'ChecklistIcon', component: ChecklistIcon, description: '–ß–µ–∫–ª–∏—Å—Ç/–ó–∞–¥–∞—á–∏' },
    { name: 'FlagIcon', component: FlagIcon, description: '–§–ª–∞–≥/–û—Ç—á–µ—Ç—ã' },
    { name: 'FlagChatIcon', component: FlagChatIcon, description: '–§–ª–∞–≥ —Å —á–∞—Ç–æ–º (–∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)' }
  ];

  const statusIcons: IconData[] = [
    { name: 'OnlineStatusIcon', component: OnlineStatusIcon, description: '–°—Ç–∞—Ç—É—Å "–û–Ω–ª–∞–π–Ω"' },
    { name: 'AwayStatusIcon', component: AwayStatusIcon, description: '–°—Ç–∞—Ç—É—Å "–û—Ç–æ—à–µ–ª/–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"' },
    { name: 'BusyStatusIcon', component: BusyStatusIcon, description: '–°—Ç–∞—Ç—É—Å "–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å/–ó–∞–Ω—è—Ç"' },
    { name: 'OfflineStatusIcon', component: OfflineStatusIcon, description: '–°—Ç–∞—Ç—É—Å "–û—Ñ—Ñ–ª–∞–π–Ω/–ù–µ–≤–∏–¥–∏–º—ã–π"' }
  ];

  const figmaIcons: IconData[] = [
    { name: 'FavoritesIcon', component: FavoritesIcon, description: '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ (–∑–≤–µ–∑–¥–∞)' },
    { name: 'NotificationIcon', component: NotificationIcon, description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫)' },
    { name: 'CallIcon', component: CallIcon, description: '–ì–æ–ª–æ—Å–æ–≤–æ–π –∑–≤–æ–Ω–æ–∫ (—Ç—Ä—É–±–∫–∞)' },
    { name: 'AttachmentIcon', component: AttachmentIcon, description: '–í–ª–æ–∂–µ–Ω–∏—è (–ø–ª—é—Å –≤ –∫—Ä—É–∂–∫–µ)' },
    { name: 'RoleBadgeIcon', component: RoleBadgeIcon, description: '–†–æ–ª—å/–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–∑–Ω–∞—á–æ–∫)' },
    { name: 'LockTierIcon', component: LockTierIcon, description: '–ó–∞–º–æ–∫ (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç)' },
    { name: 'PhoneIcon', component: PhoneIcon, description: '–¢–µ–ª–µ—Ñ–æ–Ω (–º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)' },
    { name: 'MailIcon', component: MailIcon, description: '–ü–æ—á—Ç–∞ (email –∫–æ–Ω–≤–µ—Ä—Ç)' },
    { name: 'AnonymousIcon', component: AnonymousIcon, description: '–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å/–ú–∞—Å–∫–∞ (–ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å)' },
    { name: 'WebhookIcon', component: WebhookIcon, description: '–í–µ–±—Ö—É–∫ (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)' },
    { name: 'TimeoutIcon', component: TimeoutIcon, description: '–¢–∞–π–º–∞—É—Ç (–≤—Ä–µ–º–µ–Ω–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞)' },
    { name: 'ExternalLinkIcon', component: ExternalLinkIcon, description: '–í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞ (–ø–µ—Ä–µ—Ö–æ–¥)' },
    { name: 'BlockMessageIcon', component: BlockMessageIcon, description: '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–∫—Ä–µ—Å—Ç–∏–∫)' },
    { name: 'StarOutlineIcon', component: StarOutlineIcon, description: '–ó–≤–µ–∑–¥–∞ –∫–æ–Ω—Ç—É—Ä (—Ä–µ–π—Ç–∏–Ω–≥)' },
    { name: 'SparklesIcon', component: SparklesIcon, description: '–ò—Å–∫—Ä—ã/–ú–∞–≥–∏—è (—Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç—ã)' },
    { name: 'NotificationOffIcon', component: NotificationOffIcon, description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã (–ø–µ—Ä–µ—á–µ—Ä–∫–Ω—É—Ç–æ)' },
    { name: 'OutgoingCallIcon', component: OutgoingCallIcon, description: '–ò—Å—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫ (—Å –≤–æ–ª–Ω–∞–º–∏ —Å–∏–≥–Ω–∞–ª–∞)' },
    { name: 'VideoCallIcon', component: VideoCallIcon, description: '–í–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫/–í–∏–¥–µ–æ–∫–∞–º–µ—Ä–∞' },
    { name: 'PinIcon', component: PinIcon, description: '–ö–Ω–æ–ø–∫–∞/–ë—É–ª–∞–≤–∫–∞ (–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)' },
    { name: 'AddFriendIcon', component: AddFriendIcon, description: '–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–ª—é—Å)' },
    { name: 'GroupUsersIcon', component: GroupUsersIcon, description: '–ì—Ä—É–ø–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–µ—Å–∫–æ–ª—å–∫–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)' },
    { name: 'DocumentIcon', component: DocumentIcon, description: '–î–æ–∫—É–º–µ–Ω—Ç/–§–∞–π–ª (—Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç)' },
    { name: 'ThumbsUpIcon', component: ThumbsUpIcon, description: '–õ–∞–π–∫' },
    { name: 'ThumbsDownIcon', component: ThumbsDownIcon, description: '–î–∏–∑–ª–∞–π–∫' },
    { name: 'SearchMagnifyIcon', component: SearchMagnifyIcon, description: '–ü–æ–∏—Å–∫' },
    { name: 'CloseIcon', component: CloseIcon, description: '–ó–∞–∫—Ä—ã—Ç—å' },
    { name: 'WalletIcon', component: WalletIcon, description: '–ö–æ—à–µ–ª–µ–∫' },
    { name: 'HelpIcon', component: HelpIcon, description: '–ü–æ–º–æ—â—å' },
    { name: 'BugIcon', component: BugIcon, description: '–ë–∞–≥' },
    { name: 'ToolsIcon', component: ToolsIcon, description: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã/–ù–∞—Å—Ç—Ä–æ–π–∫–∏' },
    { name: 'AddIcon', component: AddIcon, description: '–î–æ–±–∞–≤–∏—Ç—å (–ø–ª—é—Å –≤ –∫—Ä—É–∂–∫–µ)' },
    { name: 'ImageAddIcon', component: ImageAddIcon, description: '–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Ñ–æ—Ç–æ —Å –ø–ª—é—Å–æ–º)' },
    { name: 'TranslateIcon', component: TranslateIcon, description: '–ü–µ—Ä–µ–≤–æ–¥' },
    { name: 'UploadIcon', component: UploadIcon, description: '–ó–∞–≥—Ä—É–∑–∫–∞' },
    { name: 'DownloadIcon', component: DownloadIcon, description: '–°–∫–∞—á–∏–≤–∞–Ω–∏–µ' },
    { name: 'EffectsIcon', component: EffectsIcon, description: '–°–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç—ã (–∑–≤–µ–∑–¥—ã)' },
    { name: 'MenuIcon', component: MenuIcon, description: '–ú–µ–Ω—é (–≥–∞–º–±—É—Ä–≥–µ—Ä)' },
    { name: 'ListIcon', component: ListIcon, description: '–°–ø–∏—Å–æ–∫ (–º–∞—Ä–∫–µ—Ä—ã)' },
    { name: 'UserPlayIcon', component: UserPlayIcon, description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º' },
    { name: 'MicrophoneIcon', component: MicrophoneIcon, description: '–ú–∏–∫—Ä–æ—Ñ–æ–Ω' },
    { name: 'GiftIcon', component: GiftIcon, description: '–ü–æ–¥–∞—Ä–æ–∫' }
  ];

  const IconCard = ({ 
    name, 
    description, 
    IconComponent 
  }: { 
    name: string; 
    description: string; 
    IconComponent: React.FC<{ size?: number; className?: string }>; 
  }) => (
    <div 
      className="bg-gray-800 p-6 rounded-lg border border-gray-700 hover:border-blue-500 transition-colors cursor-pointer group"
      onClick={() => copyToClipboard(name)}
    >
      <div className="flex flex-col items-center space-y-3">
        <div className="text-gray-300 group-hover:text-white transition-colors">
          <IconComponent size={48} />
        </div>
        <div className="text-center">
          <p className="text-white font-medium">{name}</p>
          <p className="text-gray-400 text-sm">{description}</p>
        </div>
        {copiedIcon === name && (
          <p className="text-green-400 text-sm">–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!</p>
        )}
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gray-900 text-white p-8">
      <div className="max-w-6xl mx-auto">
        <h1 className="text-4xl font-bold mb-8 text-center">
          –ö–æ–ª–ª–µ–∫—Ü–∏—è –ò–∫–æ–Ω–æ–∫ Nebula Chat
        </h1>
        
        <div className="text-center mb-8">
          <p className="text-gray-300">
            –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
          </p>
        </div>

        <div className="space-y-12">
          {/* Profiles Section */}
          <section>
            <h2 className="text-2xl font-bold mb-6 text-blue-400">
              üìã Profiles / –ü—Ä–æ—Ñ–∏–ª–∏ ({profiles.length} –∏–∫–æ–Ω–æ–∫)
            </h2>
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-6">
              {profiles.map((icon, index) => (
                <IconCard 
                  key={index} 
                  name={icon.name} 
                  description={icon.description} 
                  IconComponent={icon.component} 
                />
              ))}
            </div>
          </section>

          {/* Server Channel and Tab Icons Section */}
          <section>
            <h2 className="text-2xl font-bold mb-6 text-purple-400">
              üñ•Ô∏è Server Channel and Tab Icons / –ò–∫–æ–Ω–∫–∏ –°–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ö–∞–Ω–∞–ª–æ–≤ –∏ –í–∫–ª–∞–¥–æ–∫ ({serverChannelTabIcons.length} –∏–∫–æ–Ω–æ–∫)
            </h2>
            {serverChannelTabIcons.length > 0 ? (
              <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-6">
                {serverChannelTabIcons.map((icon, index) => (
                  <IconCard 
                    key={index} 
                    name={icon.name} 
                    description={icon.description} 
                    IconComponent={icon.component} 
                  />
                ))}
              </div>
            ) : (
              <div className="text-center py-8 text-gray-400">
                <p>üöß –ò–∫–æ–Ω–∫–∏ –¥–ª—è —ç—Ç–æ–π —Å–µ–∫—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ</p>
              </div>
            )}
          </section>

          {/* Status Icons Section */}
          <section>
            <h2 className="text-2xl font-bold mb-6 text-green-400">
              üü¢ Status Icons / –ò–∫–æ–Ω–∫–∏ –°—Ç–∞—Ç—É—Å–∞ ({statusIcons.length} –∏–∫–æ–Ω–æ–∫)
            </h2>
            {statusIcons.length > 0 ? (
              <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-6">
                {statusIcons.map((icon, index) => (
                  <IconCard 
                    key={index} 
                    name={icon.name} 
                    description={icon.description} 
                    IconComponent={icon.component} 
                  />
                ))}
              </div>
            ) : (
              <div className="text-center py-8 text-gray-400">
                <p>üöß –ò–∫–æ–Ω–∫–∏ –¥–ª—è —ç—Ç–æ–π —Å–µ–∫—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ</p>
              </div>
            )}
          </section>

          {/* Figma Icons Section */}
          <section>
            <h2 className="text-2xl font-bold mb-6 text-orange-400">
              ‚≠ê Figma Icons / –ò–∫–æ–Ω–∫–∏ –∏–∑ Figma ({figmaIcons.length} –∏–∫–æ–Ω–∫–∏)
            </h2>
            <div className="mb-4 p-4 bg-orange-900/20 border border-orange-500/30 rounded-lg">
              <p className="text-orange-300 text-sm">
                üéØ <strong>–¢–æ—á–Ω—ã–π –ø–µ—Ä–µ–Ω–æ—Å</strong> - –û–¥–Ω–∞ –∏–∫–æ–Ω–∫–∞ "Favorites" —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏ –∏–∑ Figma
              </p>
            </div>
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-6">
              {figmaIcons.map((icon, index) => (
                <IconCard 
                  key={index} 
                  name={icon.name} 
                  description={icon.description} 
                  IconComponent={icon.component} 
                />
              ))}
            </div>
          </section>
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ */}
        {copiedIcon && (
          <div className="fixed bottom-4 right-4 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg">
            –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: {copiedIcon}
          </div>
        )}
      </div>
    </div>
  );
};

export default IconsDemo; 