import React, { useState } from 'react';
import { Button } from '../../../ui/Button';
import { Badge } from '../../../ui/Badge';
import { SparklesIcon, GameControllerIcon, GroupUsersIcon, TrophyIcon } from '../../../icons';

// –¢–∏–ø—ã –¥–ª—è Recommendations Widget
interface RecommendedServer {
  id: string;
  name: string;
  game: string;
  description: string;
  memberCount: number;
  tags: string[];
  rating: number;
  reason: string;
}

interface RecommendedGame {
  id: string;
  name: string;
  genre: string;
  rating: number;
  friendsCount: number;
  reason: string;
  onSale: boolean;
}

interface RecommendedFriend {
  id: string;
  name: string;
  avatar?: string;
  mutualFriends: number;
  commonGames: string[];
  reason: string;
}

interface TrendingContent {
  id: string;
  title: string;
  type: string;
  category: string;
  engagement: number;
  timeframe: string;
}

interface RecommendationsData {
  recommendedServers: RecommendedServer[];
  recommendedGames: RecommendedGame[];
  recommendedFriends: RecommendedFriend[];
  trendingContent: TrendingContent[];
}

// Mockup –¥–∞–Ω–Ω—ã–µ
const mockRecommendationsData: RecommendationsData = {
  recommendedServers: [
    {
      id: "1",
      name: "CS2 Competitive Pro",
      game: "CS2",
      description: "–í—ã—Å–æ–∫–æ–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Å —Ö–æ—Ä–æ—à–µ–π –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π",
      memberCount: 1247,
      tags: ["competitive", "pro", "russia"],
      rating: 4.8,
      reason: "–ü–æ—Ö–æ–∂–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã"
    },
    {
      id: "2",
      name: "Valorant Champions",
      game: "Valorant", 
      description: "–°–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ Valorant",
      memberCount: 892,
      tags: ["champions", "skilled", "tournaments"],
      rating: 4.6,
      reason: "–í—ã—Å–æ–∫–∏–π —Ä–∞–Ω–≥"
    },
    {
      id: "3",
      name: "Dota 2 CIS",
      game: "Dota 2",
      description: "–ö—Ä—É–ø–Ω–µ–π—à–µ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ Dota 2 –≤ –°–ù–ì",
      memberCount: 3421,
      tags: ["cis", "russian", "friendly"],
      rating: 4.4,
      reason: "–ü–æ–ø—É–ª—è—Ä–µ–Ω —Å—Ä–µ–¥–∏ –¥—Ä—É–∑–µ–π"
    }
  ],
  recommendedGames: [
    {
      id: "1",
      name: "Apex Legends",
      genre: "Battle Royale",
      rating: 4.5,
      friendsCount: 15,
      reason: "15 –¥—Ä—É–∑–µ–π –∏–≥—Ä–∞—é—Ç",
      onSale: true
    },
    {
      id: "2", 
      name: "Rocket League",
      genre: "Sports",
      rating: 4.7,
      friendsCount: 8,
      reason: "–ü–æ—Ö–æ–∂–∏–µ –∏–≥—Ä—ã",
      onSale: false
    },
    {
      id: "3",
      name: "Among Us",
      genre: "Social Deduction", 
      rating: 4.2,
      friendsCount: 12,
      reason: "–¢—Ä–µ–Ω–¥–∏–Ω–≥ –≤ –≥—Ä—É–ø–ø–µ",
      onSale: true
    }
  ],
  recommendedFriends: [
    {
      id: "1",
      name: "ProGamer_Elite",
      avatar: undefined,
      mutualFriends: 5,
      commonGames: ["CS2", "Valorant"],
      reason: "–û–±—â–∏–µ –¥—Ä—É–∑—å—è"
    },
    {
      id: "2",
      name: "DotaMaster_2024", 
      avatar: undefined,
      mutualFriends: 3,
      commonGames: ["Dota 2"],
      reason: "–ü–æ—Ö–æ–∂–∏–π —Å—Ç–∏–ª—å –∏–≥—Ä—ã"
    },
    {
      id: "3",
      name: "TeamPlayer_Pro",
      avatar: undefined,
      mutualFriends: 7,
      commonGames: ["CS2", "Valorant", "Apex"],
      reason: "–ê–∫—Ç–∏–≤–µ–Ω –≤ –∫–æ–º–∞–Ω–¥–Ω—ã—Ö –∏–≥—Ä–∞—Ö"
    }
  ],
  trendingContent: [
    {
      id: "1",
      title: "CS2 Major Guide",
      type: "guide",
      category: "CS2",
      engagement: 1250,
      timeframe: "–≠—Ç–∞ –Ω–µ–¥–µ–ª—è"
    },
    {
      id: "2",
      title: "Valorant Pro Tournament",
      type: "tournament", 
      category: "Valorant",
      engagement: 890,
      timeframe: "–°–µ–≥–æ–¥–Ω—è"
    },
    {
      id: "3",
      title: "Dota 2 Meta Analysis",
      type: "guide",
      category: "Dota 2", 
      engagement: 675,
      timeframe: "–í—á–µ—Ä–∞"
    }
  ]
};

export const RecommendationsWidget: React.FC<object> = () => {
  const [activeTab, setActiveTab] = useState<'servers' | 'games' | 'friends' | 'trending'>('servers');
  const [data] = useState(mockRecommendationsData);

  const getGameColor = (game: string) => {
    switch (game) {
      case 'CS2': return 'text-orange-400';
      case 'Valorant': return 'text-red-400';
      case 'Dota 2': return 'text-blue-400';
      case 'Apex Legends': return 'text-purple-400';
      default: return 'text-gray-400';
    }
  };

  const getContentTypeIcon = (type: string) => {
    switch (type) {
      case 'tournament': return 'üèÜ';
      case 'guide': return 'üìñ';
      case 'stream': return 'üì∫';
      case 'server': return 'üñ•Ô∏è';
      default: return 'üìÑ';
    }
  };

  const renderServers = () => (
    <div className="space-y-3">
      {data.recommendedServers.map((server: RecommendedServer) => (
        <div 
          key={server.id}
          className="p-3 rounded-lg bg-card/50 border border-border hover:border-primary/30 transition-colors duration-200"
        >
          <div className="flex items-start justify-between mb-2">
            <div className="flex-1">
              <div className="flex items-center space-x-2 mb-1">
                <span className="text-sm font-medium text-foreground">{server.name}</span>
                <span className={`text-xs font-medium ${getGameColor(server.game)}`}>
                  {server.game}
                </span>
                <div className="flex items-center space-x-1">
                  <span className="text-yellow-400">‚≠ê</span>
                  <span className="text-xs text-foreground">{server.rating}</span>
                </div>
              </div>
              <div className="text-xs text-muted-foreground mb-2">
                {server.description}
              </div>
              <div className="flex items-center justify-between text-xs">
                <span className="text-muted-foreground">
                  {server.memberCount.toLocaleString()} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                </span>
                <span className="text-blue-400">{server.reason}</span>
              </div>
            </div>
          </div>
          <div className="mt-2">
            <Button
              size="sm"
              variant="primary"
              onClick={() => console.log('–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É:', server.name)}
            >
              –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
            </Button>
          </div>
        </div>
      ))}
    </div>
  );

  const renderGames = () => (
    <div className="space-y-3">
      {data.recommendedGames.map((game: RecommendedGame) => (
        <div 
          key={game.id}
          className="p-3 rounded-lg bg-card/50 border border-border hover:border-primary/30 transition-colors duration-200"
        >
          <div className="flex items-start justify-between mb-2">
            <div className="flex-1">
              <div className="flex items-center space-x-2 mb-1">
                <span className="text-sm font-medium text-foreground">{game.name}</span>
                {game.onSale && (
                  <Badge variant="destructive" className="text-xs px-1.5 py-0.5">
                    –°–ö–ò–î–ö–ê
                  </Badge>
                )}
                <div className="flex items-center space-x-1">
                  <span className="text-yellow-400">‚≠ê</span>
                  <span className="text-xs text-foreground">{game.rating}</span>
                </div>
              </div>
              <div className="text-xs text-muted-foreground mb-2">
                {game.genre} ‚Ä¢ {game.reason}
              </div>
              <div className="flex items-center justify-between text-xs">
                <span className="text-muted-foreground">
                  {game.friendsCount} –¥—Ä—É–∑–µ–π –∏–≥—Ä–∞—é—Ç
                </span>
                <Button
                  size="sm"
                  variant="primary"
                  onClick={() => console.log('–°–∫–∞—á–∞—Ç—å –∏–≥—Ä—É:', game.name)}
                >
                  –°–∫–∞—á–∞—Ç—å
                </Button>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  );

  const renderFriends = () => (
    <div className="space-y-3">
      {data.recommendedFriends.map((friend: RecommendedFriend) => (
        <div 
          key={friend.id}
          className="p-3 rounded-lg bg-card/50 border border-border hover:border-primary/30 transition-colors duration-200"
        >
          <div className="flex items-start justify-between mb-2">
            <div className="flex-1">
              <div className="flex items-center space-x-2 mb-1">
                <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center">
                  <span className="text-xs font-medium text-primary">
                    {friend.name.substring(0, 2).toUpperCase()}
                  </span>
                </div>
                <span className="text-sm font-medium text-foreground">{friend.name}</span>
              </div>
              <div className="text-xs text-muted-foreground mb-2">
                {friend.mutualFriends} –æ–±—â–∏—Ö –¥—Ä—É–∑–µ–π ‚Ä¢ {friend.commonGames.join(', ')}
              </div>
              <div className="flex items-center justify-between text-xs">
                <span className="text-blue-400">{friend.reason}</span>
                <Button 
                  variant="primary" 
                  className="text-xs py-1 px-2 h-auto"
                  onClick={() => console.log('–î–æ–±–∞–≤–∏—Ç—å –≤ –¥—Ä—É–∑—å—è:', friend.name)}
                >
                  –î–æ–±–∞–≤–∏—Ç—å
                </Button>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  );

  const renderTrending = () => (
    <div className="space-y-3">
      {data.trendingContent.map((content: TrendingContent) => (
        <div 
          key={content.id}
          className="p-3 rounded-lg bg-card/50 border border-border hover:border-primary/30 transition-colors duration-200"
        >
          <div className="flex items-start justify-between mb-2">
            <div className="flex-1">
              <div className="flex items-center space-x-2 mb-1">
                <span className="text-sm">{getContentTypeIcon(content.type)}</span>
                <span className="text-sm font-medium text-foreground">{content.title}</span>
                <span className={`text-xs font-medium ${getGameColor(content.category)}`}>
                  {content.category}
                </span>
              </div>
              <div className="flex items-center justify-between text-xs">
                <span className="text-muted-foreground">
                  {content.engagement.toLocaleString()} –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
                </span>
                <span className="text-blue-400">{content.timeframe}</span>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  );

  return (
    <div className="bg-card rounded-lg border border-border p-4">
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center space-x-2">
          <SparklesIcon size={16} className="text-primary" />
          <h3 className="text-sm font-medium text-foreground">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
        </div>
      </div>

      {/* –¢–∞–±—ã */}
      <div className="grid grid-cols-4 gap-1 mb-4 p-1 bg-card/30 rounded-lg">
        <button
          onClick={() => setActiveTab('servers')}
          className={`py-2 px-2 text-xs font-medium rounded-md transition-colors duration-200 ${
            activeTab === 'servers'
              ? 'bg-primary text-primary-foreground'
              : 'text-muted-foreground hover:text-foreground hover:bg-card/50'
          }`}
        >
          <GroupUsersIcon size={12} className="inline mr-1" />
          –°–µ—Ä–≤–µ—Ä—ã
        </button>
        <button
          onClick={() => setActiveTab('games')}
          className={`py-2 px-2 text-xs font-medium rounded-md transition-colors duration-200 ${
            activeTab === 'games'
              ? 'bg-primary text-primary-foreground'
              : 'text-muted-foreground hover:text-foreground hover:bg-card/50'
          }`}
        >
          <GameControllerIcon size={12} className="inline mr-1" />
          –ò–≥—Ä—ã
        </button>
        <button
          onClick={() => setActiveTab('friends')}
          className={`py-2 px-2 text-xs font-medium rounded-md transition-colors duration-200 ${
            activeTab === 'friends'
              ? 'bg-primary text-primary-foreground'
              : 'text-muted-foreground hover:text-foreground hover:bg-card/50'
          }`}
        >
          <GroupUsersIcon size={12} className="inline mr-1" />
          –î—Ä—É–∑—å—è
        </button>
        <button
          onClick={() => setActiveTab('trending')}
          className={`py-2 px-2 text-xs font-medium rounded-md transition-colors duration-200 ${
            activeTab === 'trending'
              ? 'bg-primary text-primary-foreground'
              : 'text-muted-foreground hover:text-foreground hover:bg-card/50'
          }`}
        >
          <TrophyIcon size={12} className="inline mr-1" />
          –¢—Ä–µ–Ω–¥—ã
        </button>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="min-h-[300px]">
        {activeTab === 'servers' && renderServers()}
        {activeTab === 'games' && renderGames()}
        {activeTab === 'friends' && renderFriends()}
        {activeTab === 'trending' && renderTrending()}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex space-x-2 mt-4 pt-4 border-t border-border">
        <Button
          variant="primary"
          className="w-full"
          onClick={() => console.log('–ë–æ–ª—å—à–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π')}
        >
          –ë–æ–ª—å—à–µ
        </Button>
        <Button
          variant="secondary"
          className="w-full"
          onClick={() => console.log('–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')}
        >
          –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
        </Button>
      </div>
    </div>
  );
}; 